# Lee el archivo .csv
df = spark.read.format('csv').option('header','true').option('inferSchema', 'true').load(file_path)
#imprimimos el esquema
df.printSchema()
# Muestra las primeras filas del DataFrame
df.show()
# Estadisticas básicas
df.summary().show()
# Consulta: Filtrar por valor y seleccionar columnas
print("Cantidad de vehiculos\n")
dias = df.filter(F.col('CANTIDAD') > 50).select('MUNICIPIO','CLASE BIEN','FECHA HECHO')
dias.show()
# Ordenar filas por los valores en la columna "VALOR" en orden descendente
print("Valores ordenados de mayor a menor\n")
sorted_df = df.sort(F.col("CANTIDAD").desc())
sorted_df.show()

# Agrupado por municipio
# Agrupa por 'MUNICIPIO' y calcula la suma de 'CANTIDAD' de vehículos por cada municipio
municipio_df = df.groupBy('MUNICIPIO').agg(F.sum('CANTIDAD').alias('TOTAL_CANTIDAD'))
# Ordena de mayor a menor según la cantidad total
municipio_df = municipio_df.orderBy(F.desc('TOTAL_CANTIDAD'))
# Muestra el resultado
municipio_df.show()

# Agrupa por 'DEPARTAMENTO' y calcula la suma de 'CANTIDAD' de vehículos por cada DEPARTAMENTO
departamento_df = df.groupBy('DEPARTAMENTO').agg(F.sum('CANTIDAD').alias('TOTAL_CANTIDAD'))
# Ordena de mayor a menor según la cantidad total
departamento_df = departamento_df.orderBy(F.desc('TOTAL_CANTIDAD'))
# Muestra el resultado
departamento_df.show()


# Agrupa por 'FECHA' y calcula la suma de 'CANTIDAD' de vehículos para cada fecha
fecha_df = df.groupBy('FECHA HECHO').agg(F.sum('CANTIDAD').alias('TOTAL_CANTIDAD'))
# Ordena de mayor a menor según la cantidad total
fecha_df = fecha_df.orderBy(F.desc('TOTAL_CANTIDAD'))
# Muestra el resultado
fecha_df.show()
